#!/bin/bash

GROUP=$1
COREOS_RELEASE_BOARD=$2
COREOS_RELEASE_VERSION=$3
DRIVER_VERSION=$4
CONTAINER_URL=http://$GROUP.release.core-os.net/$COREOS_RELEASE_BOARD/$COREOS_RELEASE_VERSION/coreos_developer_container.bin.bz2
while read -r e ; do export $e ;done < <(update_engine_client -status 2>/dev/null)
[ "$CURRENT_OP" != "UPDATE_STATUS_UPDATED_NEED_REBOOT" ] && exit
COREOS_RELEASE_VERSION=$NEW_VERSION

echo "Compiling kernel modules for $DRIVER_VERSION, Container Linux $GROUP $COREOS_RELEASE_BOARD $COREOS_RELEASE_VERSION"
mkdir -p /home/core/.modulus/"$DRIVER_VERSION"
pushd /home/core/.modulus/"$DRIVER_VERSION"
mkdir -p out
gpg2 --recv-keys 48F9B96A2E16137F
curl -L "$CONTAINER_URL" | tee >(bzip2 -d > coreos_developer_container.bin) | gpg2 --verify <(curl -Ls "$CONTAINER_URL.sig") -
sudo systemd-nspawn \
    --bind-ro=/opt/bin:/opt/bin \
    --bind="$PWD"/out:/out \
    --image=coreos_developer_container.bin \
    --register=no \
    --setenv=DRIVER_VERSION="$DRIVER_VERSION" \
    --setenv=COREOS_RELEASE_VERSION="$COREOS_RELEASE_VERSION" \
    --setenv=GROUP="$GROUP" \
    --setenv=AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
    --setenv=AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
    /opt/bin/"$DRIVER_VERSION"

# Export modules and assets
mkdir -p /opt/"$DRIVER_VERSION"
cp -r ./out/* /opt/"$DRIVER_VERSION"/
tar -cvzf "$COREOS_RELEASE_VERSION"-"$GROUP"-"$DRIVER_VERSION".tar.gz ./out
. /home/core/awsenv
for t in ./*.tar.gz; do \
    rkt run \
        --net=host \
        --dns=host \
        --trust-keys-from-https quay.io/coreos/awscli:025a357f05242fdad6a81e8a6b520098aa65a600 \
        --volume=out,kind=host,source="$PWD"/"$t" \
        --mount=volume=out,target=/"$t" \
        --set-env=AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
        --set-env=AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
        --exec=/usr/bin/aws -- s3 cp /"$t" "$S3_BUCKET" ; done
